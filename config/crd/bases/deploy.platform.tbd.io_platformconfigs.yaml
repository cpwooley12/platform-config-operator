---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: platformconfigs.deploy.platform.tbd.io
spec:
  group: deploy.platform.tbd.io
  names:
    kind: PlatformConfig
    listKind: PlatformConfigList
    plural: platformconfigs
    singular: platformconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PlatformConfig is the Schema for the platformconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PlatformConfigSpec defines the desired state of PlatformConfig.
            properties:
              cloud:
                properties:
                  local:
                    default: true
                    description: "(Default: true)\n\n\n\tWhether this cloud is deployed
                      as a local cloud to use for testing scenarios."
                    type: boolean
                  type:
                    default: aws
                    description: "(Default: \"aws\")\n\n\n\tUnderlying cloud type
                      this platform is deployed upon.  Currently, only AWS is supported."
                    enum:
                    - aws
                    type: string
                type: object
              platform:
                properties:
                  certificates:
                    properties:
                      deploymentSize:
                        default: small
                        description: "(Default: \"small\")\nSize of the\n\n\n\tdeployment
                          for the underlying capability.  Must be one of small, medium,
                          or large."
                        type: string
                      namespace:
                        default: tbd-certificates-system
                        description: "(Default: \"tbd-certificates-system\")\nNamespace
                          where\n\n\n\tthe capability components will be deployed."
                        type: string
                    type: object
                  identity:
                    properties:
                      deploymentSize:
                        default: small
                        description: "(Default: \"small\")\nSize of the\n\n\n\tdeployment
                          for the underlying capability.  Must be one of small, medium,
                          or large."
                        type: string
                      namespace:
                        default: tbd-identity-system
                        description: "(Default: \"tbd-identity-system\")\nNamespace
                          where\n\n\n\tthe capability components will be deployed."
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: PlatformConfigStatus defines the observed state of PlatformConfig.
            properties:
              conditions:
                items:
                  description: |-
                    PhaseCondition describes an event that has occurred during a phase
                    of the controller reconciliation loop.
                  properties:
                    lastModified:
                      description: LastModified defines the time in which this component
                        was updated.
                      type: string
                    message:
                      description: Message defines a helpful message from the phase.
                      type: string
                    phase:
                      description: Phase defines the phase in which the condition
                        was set.
                      type: string
                    state:
                      description: PhaseState defines the current state of the phase.
                      enum:
                      - Complete
                      - Reconciling
                      - Failed
                      - Pending
                      type: string
                  required:
                  - lastModified
                  - message
                  - phase
                  - state
                  type: object
                type: array
              created:
                type: boolean
              dependenciesSatisfied:
                type: boolean
              resources:
                items:
                  description: ChildResource is the resource and its condition as
                    stored on the workload custom resource's status field.
                  properties:
                    condition:
                      description: ResourceCondition defines the current condition
                        of this resource.
                      properties:
                        created:
                          description: Created defines whether this object has been
                            successfully created or not.
                          type: boolean
                        lastModified:
                          description: LastModified defines the time in which this
                            resource was updated.
                          type: string
                        message:
                          description: Message defines a helpful message from the
                            resource phase.
                          type: string
                      required:
                      - created
                      type: object
                    group:
                      description: Group defines the API Group of the resource.
                      type: string
                    kind:
                      description: Kind defines the kind of the resource.
                      type: string
                    name:
                      description: Name defines the name of the resource from the
                        metadata.name field.
                      type: string
                    namespace:
                      description: Namespace defines the namespace in which this resource
                        exists in.
                      type: string
                    version:
                      description: Version defines the API Version of the resource.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - namespace
                  - version
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
